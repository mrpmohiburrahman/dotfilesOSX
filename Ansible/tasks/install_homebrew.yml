# install_homebrew.yml
- name: Install OS Packages
  when: ansible_os_family == "Darwin"

  block:
    - name: Set HomeBrew path for Intel architecture
      ansible.builtin.set_fact:
        homebrew_path: /usr/local/bin/brew
      when: ansible_architecture != "arm64"

    - name: Set HomeBrew path for ARM architecture
      ansible.builtin.set_fact:
        homebrew_path: /opt/homebrew/bin
      when: ansible_architecture == "arm64"

    - name: Check If Homebrew Is Installed
      ansible.builtin.stat:
        path: "{{ homebrew_path }}"
      register: homebrew_check

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      ansible.builtin.fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing|bool

    - name: Install Homebrew (Intel architecture)
      ansible.builtin.shell:
        cmd: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        creates: "{{ homebrew_path }}"
      become: false
      when:
        - ansible_architecture != "arm64"
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing|bool

    - name: Install Homebrew (ARM architecture)
      ansible.builtin.shell:
        cmd: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        creates: "{{ homebrew_path }}"
      become: false
      when:
        - ansible_architecture == "arm64"
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing|bool

    - name: Updating Homebrew
      become: false
      community.general.packaging.os.homebrew:
        update_homebrew: "{{ update_homebrew }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew Packages
      become: false
      community.general.packaging.os.homebrew:
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists
