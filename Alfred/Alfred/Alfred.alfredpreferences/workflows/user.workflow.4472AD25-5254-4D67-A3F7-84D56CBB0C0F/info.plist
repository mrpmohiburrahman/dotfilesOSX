<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.alfredapp.ankitr.google.meet</string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>3CE65BF0-9451-4124-81CE-B6E40C34803E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>38B68D01-6C29-4397-B2F8-CB0CC60B794C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string></string>
	<key>description</key>
	<string></string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Google Meets</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>gmeet</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Create New Google Meets Meeting...</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>3CE65BF0-9451-4124-81CE-B6E40C34803E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>open https://meet.google.com/new

MAX_TRIES=10
TRIES=0

DEFAULT_BROWSER=$(defaults read ~/Library/Preferences/com.apple.LaunchServices/com.apple.launchservices.secure.plist | awk -F'\"' '/http;/{print window[(NR)-1]}{window[NR]=$2}')

get_url () {
  if [ "$DEFAULT_BROWSER" = "com.google.chrome" ]; then
    URL=$(osascript -e 'tell application "Chrome" to URL of active tab of front window as text')
  elif [ "$DEFAULT_BROWSER" = "com.brave.browser" ]; then
    URL=$(osascript -e 'tell application "Brave" to URL of active tab of front window as text')
  elif [ "$DEFAULT_BROWSER" = "com.apple.safari" ]; then
    URL=$(osascript -e 'tell application "Safari" to return URL of front document')
  elif [ "$DEFAULT_BROWSER" = "org.mozilla.firefox" ]; then
    URL=$(osascript -e 'tell applcation "Firefox" to activate')
    echo "There is no support for Firefox yet. Please copy the URL manually"
    exit 0
  fi
}

while true; do
  ((TRIES++))

  # Allow some time between each iteration to perform an attempt
  sleep 1

  # As we're doing `while true`, we do want to make sure we can
  # exit the script when we feel we've tried too many times.
  if [[ "$TRIES" -gt "$MAX_TRIES" ]]; then
    echo "Could not copy Google Meet url"
    break;
  fi

  get_url

  # First, we'll check if we are still on the Google Meet page.
  if [[ $URL != "https://meet.google.com"* ]]; then
    continue
  fi

  # Next, we want to make sure it's not still loading.
  if [[ $URL == *"new"* ]]; then
    continue
  fi

  echo $URL | pbcopy
  echo "Copied Google Meet url"
  break
done</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>38B68D01-6C29-4397-B2F8-CB0CC60B794C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>38B68D01-6C29-4397-B2F8-CB0CC60B794C</key>
		<dict>
			<key>xpos</key>
			<real>555</real>
			<key>ypos</key>
			<real>310</real>
		</dict>
		<key>3CE65BF0-9451-4124-81CE-B6E40C34803E</key>
		<dict>
			<key>xpos</key>
			<real>275</real>
			<key>ypos</key>
			<real>310</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.0</string>
	<key>webaddress</key>
	<string></string>
</dict>
</plist>
