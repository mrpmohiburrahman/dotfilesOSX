# tasks/homebrew/install_homebrew_formulae.yml

- name: Install homebrew formulae
  vars:
    brew_packages_install: []
    brew_packages_uninstall: []

  block:
    - name: Set HomeBrew path
      ansible.builtin.set_fact:
        homebrew_path: /usr/local/bin/brew
      when: ansible_architecture != "arm64"

    - name: Set HomeBrew path
      ansible.builtin.set_fact:
        homebrew_path: /opt/homebrew/bin
      when: ansible_architecture == "arm64"

    - name: Ensuring Homebrew Is Installed
      ansible.builtin.stat:
        path: "{{ homebrew_path  }}"
      register: homebrew_check

    - name: Define Homebrew Packages to Install
      ansible.builtin.set_fact:
        brew_packages_install: "{{ brew_packages_install + [item.name] }}"
      loop: "{{ brew_packages }}"
      when: item.state | lower == "present"

    - name: Define Homebrew Packages to Uninstall
      ansible.builtin.set_fact:
        brew_packages_uninstall: "{{ brew_packages_uninstall + [item.name] }}"
      loop: "{{ brew_packages }}"
      when: item.state | lower == "absent"

    - name: Installing Homebrew Packages
      become: false
      community.general.packaging.os.homebrew:
        name: "{{ brew_packages_install }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Uninstall Homebrew Packages
      become: false
      community.general.packaging.os.homebrew:
        name: "{{ brew_packages_uninstall }}"
        state: absent
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: List installed Homebrew packages
      become: false
      command: "{{ homebrew_path }}/brew list"
      register: installed_packages
      changed_when: False

    - name: Check if specific packages are installed
      become: false
      debug:
        msg: "{{ item }} is installed."
      loop: "{{ brew_packages_install | default([]) }}"
      when:
        - item in installed_packages.stdout_lines
